{
    "contractName": "Worker",
    "abi": [
        {
            "inputs": [
                {
                    "internalType": "address",
                    "name": "_internalWorker",
                    "type": "address"
                }
            ],
            "name": "doWork",
            "outputs": [],
            "stateMutability": "nonpayable",
            "type": "function"
        }
    ],
    "metadata": "{\"compiler\":{\"version\":\"0.8.12+commit.f00d7308\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_internalWorker\",\"type\":\"address\"}],\"name\":\"doWork\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"c:/Users/yanni/Documents/Formation Alyra/Solidity_security/contracts/02_DelagateCall.sol\":\"Worker\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"c:/Users/yanni/Documents/Formation Alyra/Solidity_security/contracts/02_DelagateCall.sol\":{\"keccak256\":\"0x03cc1756924d1d31fd3261313a7e93a3a098dd46acdbadc6c4738e8d8f636d45\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://949e7dd87af150bab48a5d5d43f5bde62f023a766761c27a81a93df0f9bab26d\",\"dweb:/ipfs/QmWnC3xzcR4kmsHayDLuqSoYGmzXSXuqMZmiDHxHvwJrJB\"]}},\"version\":1}",
    "bytecode": "608060405234801561001057600080fd5b5061016a806100206000396000f3fe608060405234801561001057600080fd5b506004361061002b5760003560e01c80633b66042914610030575b600080fd5b61004361003e3660046100c9565b610045565b005b60408051600481526024810182526020810180516001600160e01b03166313186e9d60e11b17905290516001600160a01b03831691610083916100f9565b600060405180830381855af49150503d80600081146100be576040519150601f19603f3d011682016040523d82523d6000602084013e6100c3565b606091505b50505050565b6000602082840312156100db57600080fd5b81356001600160a01b03811681146100f257600080fd5b9392505050565b6000825160005b8181101561011a5760208186018101518583015201610100565b81811115610129576000828501525b50919091019291505056fea2646970667358221220e20a2a1fc8abde33f4fa6e42de8a13d120d9ac32fc058ebe4640ba1b6d8e2a0464736f6c634300080c0033",
    "deployedBytecode": "608060405234801561001057600080fd5b506004361061002b5760003560e01c80633b66042914610030575b600080fd5b61004361003e3660046100c9565b610045565b005b60408051600481526024810182526020810180516001600160e01b03166313186e9d60e11b17905290516001600160a01b03831691610083916100f9565b600060405180830381855af49150503d80600081146100be576040519150601f19603f3d011682016040523d82523d6000602084013e6100c3565b606091505b50505050565b6000602082840312156100db57600080fd5b81356001600160a01b03811681146100f257600080fd5b9392505050565b6000825160005b8181101561011a5760208186018101518583015201610100565b81811115610129576000828501525b50919091019291505056fea2646970667358221220e20a2a1fc8abde33f4fa6e42de8a13d120d9ac32fc058ebe4640ba1b6d8e2a0464736f6c634300080c0033",
    "sourceMap": "170:183:0:-:0;;;;;;;;;;;;;;;;;;;",
    "deployedSourceMap": "170:183:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;194:156;;;;;;:::i;:::-;;:::i;:::-;;;306:35;;;;;;;;;;;;;;;;-1:-1:-1;;;;;306:35:0;-1:-1:-1;;;306:35:0;;;277:65;;-1:-1:-1;;;;;277:28:0;;;:65;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;194:156;:::o;14:286:1:-;73:6;126:2;114:9;105:7;101:23;97:32;94:52;;;142:1;139;132:12;94:52;168:23;;-1:-1:-1;;;;;220:31:1;;210:42;;200:70;;266:1;263;256:12;200:70;289:5;14:286;-1:-1:-1;;;14:286:1:o;305:426::-;434:3;472:6;466:13;497:1;507:129;521:6;518:1;515:13;507:129;;;619:4;603:14;;;599:25;;593:32;580:11;;;573:53;536:12;507:129;;;654:6;651:1;648:13;645:48;;;689:1;680:6;675:3;671:16;664:27;645:48;-1:-1:-1;709:16:1;;;;;305:426;-1:-1:-1;;305:426:1:o",
    "sourcePath": "c:/Users/yanni/Documents/Formation Alyra/Solidity_security/contracts/02_DelagateCall.sol",
    "compiler": {
        "name": "solc",
        "version": "0.8.12+commit.f00d7308"
    },
    "ast": {
        "absolutePath": "c:/Users/yanni/Documents/Formation Alyra/Solidity_security/contracts/02_DelagateCall.sol",
        "exportedSymbols": {
            "Destructor": [
                13
            ],
            "Worker": [
                29
            ]
        },
        "id": 30,
        "license": "MIT",
        "nodeType": "SourceUnit",
        "nodes": [
            {
                "id": 1,
                "literals": [
                    "solidity",
                    "0.8",
                    ".12"
                ],
                "nodeType": "PragmaDirective",
                "src": "33:23:0"
            },
            {
                "abstract": false,
                "baseContracts": [],
                "canonicalName": "Destructor",
                "contractDependencies": [],
                "contractKind": "contract",
                "fullyImplemented": true,
                "id": 13,
                "linearizedBaseContracts": [
                    13
                ],
                "name": "Destructor",
                "nameLocation": "69:10:0",
                "nodeType": "ContractDefinition",
                "nodes": [
                    {
                        "body": {
                            "id": 11,
                            "nodeType": "Block",
                            "src": "120:43:0",
                            "statements": [
                                {
                                    "expression": {
                                        "arguments": [
                                            {
                                                "arguments": [
                                                    {
                                                        "hexValue": "30",
                                                        "id": 7,
                                                        "isConstant": false,
                                                        "isLValue": false,
                                                        "isPure": true,
                                                        "kind": "number",
                                                        "lValueRequested": false,
                                                        "nodeType": "Literal",
                                                        "src": "152:1:0",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_rational_0_by_1",
                                                            "typeString": "int_const 0"
                                                        },
                                                        "value": "0"
                                                    }
                                                ],
                                                "expression": {
                                                    "argumentTypes": [
                                                        {
                                                            "typeIdentifier": "t_rational_0_by_1",
                                                            "typeString": "int_const 0"
                                                        }
                                                    ],
                                                    "id": 6,
                                                    "isConstant": false,
                                                    "isLValue": false,
                                                    "isPure": true,
                                                    "lValueRequested": false,
                                                    "nodeType": "ElementaryTypeNameExpression",
                                                    "src": "144:8:0",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_type$_t_address_payable_$",
                                                        "typeString": "type(address payable)"
                                                    },
                                                    "typeName": {
                                                        "id": 5,
                                                        "name": "address",
                                                        "nodeType": "ElementaryTypeName",
                                                        "src": "144:8:0",
                                                        "stateMutability": "payable",
                                                        "typeDescriptions": {}
                                                    }
                                                },
                                                "id": 8,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": true,
                                                "kind": "typeConversion",
                                                "lValueRequested": false,
                                                "names": [],
                                                "nodeType": "FunctionCall",
                                                "src": "144:10:0",
                                                "tryCall": false,
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_address_payable",
                                                    "typeString": "address payable"
                                                }
                                            }
                                        ],
                                        "expression": {
                                            "argumentTypes": [
                                                {
                                                    "typeIdentifier": "t_address_payable",
                                                    "typeString": "address payable"
                                                }
                                            ],
                                            "id": 4,
                                            "name": "selfdestruct",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 4294967275,
                                            "src": "131:12:0",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_function_selfdestruct_nonpayable$_t_address_payable_$returns$__$",
                                                "typeString": "function (address payable)"
                                            }
                                        },
                                        "id": 9,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "kind": "functionCall",
                                        "lValueRequested": false,
                                        "names": [],
                                        "nodeType": "FunctionCall",
                                        "src": "131:24:0",
                                        "tryCall": false,
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_tuple$__$",
                                            "typeString": "tuple()"
                                        }
                                    },
                                    "id": 10,
                                    "nodeType": "ExpressionStatement",
                                    "src": "131:24:0"
                                }
                            ]
                        },
                        "functionSelector": "2630dd3a",
                        "id": 12,
                        "implemented": true,
                        "kind": "function",
                        "modifiers": [],
                        "name": "doWork",
                        "nameLocation": "97:6:0",
                        "nodeType": "FunctionDefinition",
                        "parameters": {
                            "id": 2,
                            "nodeType": "ParameterList",
                            "parameters": [],
                            "src": "103:2:0"
                        },
                        "returnParameters": {
                            "id": 3,
                            "nodeType": "ParameterList",
                            "parameters": [],
                            "src": "120:0:0"
                        },
                        "scope": 13,
                        "src": "88:75:0",
                        "stateMutability": "nonpayable",
                        "virtual": false,
                        "visibility": "external"
                    }
                ],
                "scope": 30,
                "src": "60:106:0",
                "usedErrors": []
            },
            {
                "abstract": false,
                "baseContracts": [],
                "canonicalName": "Worker",
                "contractDependencies": [],
                "contractKind": "contract",
                "fullyImplemented": true,
                "id": 29,
                "linearizedBaseContracts": [
                    29
                ],
                "name": "Worker",
                "nameLocation": "179:6:0",
                "nodeType": "ContractDefinition",
                "nodes": [
                    {
                        "body": {
                            "id": 27,
                            "nodeType": "Block",
                            "src": "247:103:0",
                            "statements": [
                                {
                                    "expression": {
                                        "arguments": [
                                            {
                                                "arguments": [
                                                    {
                                                        "hexValue": "646f576f726b2829",
                                                        "id": 23,
                                                        "isConstant": false,
                                                        "isLValue": false,
                                                        "isPure": true,
                                                        "kind": "string",
                                                        "lValueRequested": false,
                                                        "nodeType": "Literal",
                                                        "src": "330:10:0",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_stringliteral_2630dd3a0b5846e30547090d0b11bd2447cc6cc3fb138cb17770abd89d1d4b98",
                                                            "typeString": "literal_string \"doWork()\""
                                                        },
                                                        "value": "doWork()"
                                                    }
                                                ],
                                                "expression": {
                                                    "argumentTypes": [
                                                        {
                                                            "typeIdentifier": "t_stringliteral_2630dd3a0b5846e30547090d0b11bd2447cc6cc3fb138cb17770abd89d1d4b98",
                                                            "typeString": "literal_string \"doWork()\""
                                                        }
                                                    ],
                                                    "expression": {
                                                        "id": 21,
                                                        "name": "abi",
                                                        "nodeType": "Identifier",
                                                        "overloadedDeclarations": [],
                                                        "referencedDeclaration": 4294967295,
                                                        "src": "306:3:0",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_magic_abi",
                                                            "typeString": "abi"
                                                        }
                                                    },
                                                    "id": 22,
                                                    "isConstant": false,
                                                    "isLValue": false,
                                                    "isPure": true,
                                                    "lValueRequested": false,
                                                    "memberName": "encodeWithSignature",
                                                    "nodeType": "MemberAccess",
                                                    "src": "306:23:0",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_function_abiencodewithsignature_pure$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
                                                        "typeString": "function (string memory) pure returns (bytes memory)"
                                                    }
                                                },
                                                "id": 24,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": true,
                                                "kind": "functionCall",
                                                "lValueRequested": false,
                                                "names": [],
                                                "nodeType": "FunctionCall",
                                                "src": "306:35:0",
                                                "tryCall": false,
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_bytes_memory_ptr",
                                                    "typeString": "bytes memory"
                                                }
                                            }
                                        ],
                                        "expression": {
                                            "argumentTypes": [
                                                {
                                                    "typeIdentifier": "t_bytes_memory_ptr",
                                                    "typeString": "bytes memory"
                                                }
                                            ],
                                            "expression": {
                                                "id": 18,
                                                "name": "_internalWorker",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 15,
                                                "src": "277:15:0",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_address",
                                                    "typeString": "address"
                                                }
                                            },
                                            "id": 20,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": false,
                                            "lValueRequested": false,
                                            "memberName": "delegatecall",
                                            "nodeType": "MemberAccess",
                                            "src": "277:28:0",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_function_baredelegatecall_nonpayable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
                                                "typeString": "function (bytes memory) returns (bool,bytes memory)"
                                            }
                                        },
                                        "id": 25,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "kind": "functionCall",
                                        "lValueRequested": false,
                                        "names": [],
                                        "nodeType": "FunctionCall",
                                        "src": "277:65:0",
                                        "tryCall": false,
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
                                            "typeString": "tuple(bool,bytes memory)"
                                        }
                                    },
                                    "id": 26,
                                    "nodeType": "ExpressionStatement",
                                    "src": "277:65:0"
                                }
                            ]
                        },
                        "functionSelector": "3b660429",
                        "id": 28,
                        "implemented": true,
                        "kind": "function",
                        "modifiers": [],
                        "name": "doWork",
                        "nameLocation": "203:6:0",
                        "nodeType": "FunctionDefinition",
                        "parameters": {
                            "id": 16,
                            "nodeType": "ParameterList",
                            "parameters": [
                                {
                                    "constant": false,
                                    "id": 15,
                                    "mutability": "mutable",
                                    "name": "_internalWorker",
                                    "nameLocation": "218:15:0",
                                    "nodeType": "VariableDeclaration",
                                    "scope": 28,
                                    "src": "210:23:0",
                                    "stateVariable": false,
                                    "storageLocation": "default",
                                    "typeDescriptions": {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                    },
                                    "typeName": {
                                        "id": 14,
                                        "name": "address",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "210:7:0",
                                        "stateMutability": "nonpayable",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_address",
                                            "typeString": "address"
                                        }
                                    },
                                    "visibility": "internal"
                                }
                            ],
                            "src": "209:25:0"
                        },
                        "returnParameters": {
                            "id": 17,
                            "nodeType": "ParameterList",
                            "parameters": [],
                            "src": "247:0:0"
                        },
                        "scope": 29,
                        "src": "194:156:0",
                        "stateMutability": "nonpayable",
                        "virtual": false,
                        "visibility": "public"
                    }
                ],
                "scope": 30,
                "src": "170:183:0",
                "usedErrors": []
            }
        ],
        "src": "33:322:0"
    },
    "functionHashes": {
        "doWork(address)": "3b660429"
    },
    "gasEstimates": {
        "creation": {
            "codeDepositCost": "72400",
            "executionCost": "123",
            "totalCost": "72523"
        },
        "external": {
            "doWork(address)": "infinite"
        }
    }
}